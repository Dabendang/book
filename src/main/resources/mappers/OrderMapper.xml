<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.fjut.bookshop.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="edu.fjut.bookshop.domain.Order" >
    <constructor >
      <idArg column="orderId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="userName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bookName" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="buyData" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="buyNumber" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="buyPrice" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="buyAddress" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, userName, bookName, buyData, buyNumber, buyPrice, buyAddress, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.fjut.bookshop.domain.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bs_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bs_order
    where orderId = #{orderid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bs_order
    where orderId = #{orderid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="edu.fjut.bookshop.domain.Order" >
    insert into bs_order (orderId, userName, bookName, 
      buyData, buyNumber, buyPrice, 
      buyAddress, status)
    values (#{orderid,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, 
      #{buydata,jdbcType=TIMESTAMP}, #{buynumber,jdbcType=INTEGER}, #{buyprice,jdbcType=DECIMAL}, 
      #{buyaddress,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.fjut.bookshop.domain.Order" >
    insert into bs_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="bookname != null" >
        bookName,
      </if>
      <if test="buydata != null" >
        buyData,
      </if>
      <if test="buynumber != null" >
        buyNumber,
      </if>
      <if test="buyprice != null" >
        buyPrice,
      </if>
      <if test="buyaddress != null" >
        buyAddress,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="buydata != null" >
        #{buydata,jdbcType=TIMESTAMP},
      </if>
      <if test="buynumber != null" >
        #{buynumber,jdbcType=INTEGER},
      </if>
      <if test="buyprice != null" >
        #{buyprice,jdbcType=DECIMAL},
      </if>
      <if test="buyaddress != null" >
        #{buyaddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update bs_order
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.bookname != null" >
        bookName = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.buydata != null" >
        buyData = #{record.buydata,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buynumber != null" >
        buyNumber = #{record.buynumber,jdbcType=INTEGER},
      </if>
      <if test="record.buyprice != null" >
        buyPrice = #{record.buyprice,jdbcType=DECIMAL},
      </if>
      <if test="record.buyaddress != null" >
        buyAddress = #{record.buyaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bs_order
    set orderId = #{record.orderid,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      bookName = #{record.bookname,jdbcType=VARCHAR},
      buyData = #{record.buydata,jdbcType=TIMESTAMP},
      buyNumber = #{record.buynumber,jdbcType=INTEGER},
      buyPrice = #{record.buyprice,jdbcType=DECIMAL},
      buyAddress = #{record.buyaddress,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.fjut.bookshop.domain.Order" >
    update bs_order
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        bookName = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="buydata != null" >
        buyData = #{buydata,jdbcType=TIMESTAMP},
      </if>
      <if test="buynumber != null" >
        buyNumber = #{buynumber,jdbcType=INTEGER},
      </if>
      <if test="buyprice != null" >
        buyPrice = #{buyprice,jdbcType=DECIMAL},
      </if>
      <if test="buyaddress != null" >
        buyAddress = #{buyaddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.fjut.bookshop.domain.Order" >
    update bs_order
    set userName = #{username,jdbcType=VARCHAR},
      bookName = #{bookname,jdbcType=VARCHAR},
      buyData = #{buydata,jdbcType=TIMESTAMP},
      buyNumber = #{buynumber,jdbcType=INTEGER},
      buyPrice = #{buyprice,jdbcType=DECIMAL},
      buyAddress = #{buyaddress,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where orderId = #{orderid,jdbcType=VARCHAR}
  </update>



  <select id="selectBookNameById" parameterType="java.lang.String" resultType="string">
    SELECT bookName
    FROM bs_order
    where orderId = #{orderId}
  </select>

  <select id="selectUserNameByID" parameterType="java.lang.String" resultType="string">
    SELECT userName
    FROM bs_order
    where orderId = #{orderId}
  </select>

  <select id="selectLikeOrderidAndStatus" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM bs_order
    <where>
      <if test="orderid !=null and orderid!=''">
        AND orderId LIKE #{orderid}
      </if>
      <if test="status !=null and status!=''">
        AND status=#{status}
      </if>
    </where>
  </select>

  <select id="selectEqualsToUsername" parameterType="map" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM bs_order
    <where>
        AND  username=#{username}
    </where>
  </select>

</mapper>